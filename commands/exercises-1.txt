check credential validity :
=> aws sts get-caller-identity

create cluster :
=> eksctl create cluster \
    --name exercises-learning \
    --region us-east-2 \
    --nodegroup-name linux-nodes \
    --node-type t3.small \ 
    --nodes 1 \                         
    --nodes-min 1 \ 
    --nodes-max 2 \  
    --managed

check cluster :
=> eksctl get cluster

delete cluster :
=> eksctl delete cluster --name exercises-learning --region us-east-2

create ecr :
=> aws ecr create-repository --repository-name exercises-learning-ecr

check ecr :
=> aws ecr describe-repositories

list ecr :
=> aws ecr describe-repositories --query 'repositories[*].repositoryName' --output table

delete ecr :
=> aws ecr delete-repository --repository-name exercises-learning-ecr --force

apply kubectl :
=> kubectl apply -f k8s/deployment.yml

delete the kubectl pods :
=> kubectl apply -f k8s/deployment.yml

kubectl roolout :
=> kubectl rollout restart deployment learning-exercise-deployment -n le-na-dev

get running pods :
=> kubectl get pods

get elb uri :
=> kubectl get svc learning-exercise-service

get security groups table way :
=> aws ec2 describe-security-groups --query 'SecurityGroups[*].[GroupId,GroupName]' --output table --region us-east-2


check available namespace :
=> kubectl get namespaces


check namespace for all : 
=> kubectl get pods --all-namespaces

check deployments :
=> kubectl get deployments -n learning-exercise-namespace


debugging-----

check deployment status :
=> kubectl describe deployment learning-exercise-deployment -n le-na-dev

check detailed error of the deployment :
=> kubectl describe pod learning-exercise-deployment-7ccf86755d  -n le-na-dev



IRSA :

create oidc provider :
=> eksctl utils associate-iam-oidc-provider \
  --region us-east-2 \
  --cluster exercises-learning \
  --approve

check oiDc provider for the cluster (IRSA) :
=> aws eks describe-cluster \
  --name exercises-learning \
  --region us-east-2 \
  --query "cluster.identity.oidc.issuer" \
  --output text

check oidc provider (RABC) :
=> eksctl get iamidentitymapping --cluster exercises-learning --region us-east-2

create Iam policy :
aws iam create-policy \
  --policy-name learning-exercise-policy \
  --policy-document file://learning-exercise-policy.json

check iam policy :
=> aws iam list-policies

Get iam policy by name :
=> aws iam list-policies --query "Policies[?PolicyName=='learning-exercise-policy']"



create service account :
=> eksctl create iamserviceaccount \
  --name exercise-learning-sa \
  --namespace default \
  --cluster exercises-learning \
  --attach-policy-arn arn:aws:iam::156583401143:policy/exercise-learning-s3-policy \
  --approve \
  --region us-east-2 

check iam service account :
=> kubectl get serviceaccounts

check serviceAccouts with full details :
=> kubectl get serviceaccounts learning-exercise-sa -n learning-exercise-namespace -o yaml


get OIDC provider ARN :
=> aws eks describe-cluster \
  --name exercises-learning \
  --region us-east-2 \
  --query "cluster.identity.oidc.issuer" \
  --output text

create Iam Role :
=> aws iam create-role \
  --role-name le-ro \
  --assume-role-policy-document file://trust-policy.json

check Iam role by name :
=> aws iam get-role --role-name learning-exercise-role

List Iam roles :
=> aws iam list-roles 

Attatch policy with iam role :
=> aws iam attach-role-policy \
  --role-name le-ro \
  --policy-arn arn:aws:iam::156583401143:policy/learning-exercise-policy


Update the Iam role :
=> aws iam update-assume-role-policy \
  --role-name le-ro\
  --policy-document file://trust-policy.json



Run apply using kustomize :
=> kubectl apply -k overlays/dev/
=> kubectl apply -k overlays/prod/

To delte the applied :
=> kubectl delete -k overlays/dev/

check inside the pod :
=> kubectl exec -it learning-exercise-deployment-74b76855f6-p8jmc -n learning-exercise-namespace -- printenv WELCOME_MESSAGE


check log of pods :
=> kubectl logs learning-exercise-deployment-6b975748dc-tz4tr -n learning-exercise-namespace

check nodeGroup role---->
aws eks describe-nodegroup \
  --cluster-name exercises-learning \
  --nodegroup-name linux-nodes \
  --region us-east-2 \
  --query "nodegroup.nodeRole" \
  --output text

Check the policies in the role=====>
aws iam list-attached-role-policies \
  --role-name eksctl-exercises-learning-nodegrou-NodeInstanceRole-WExpF0eeB0Na
